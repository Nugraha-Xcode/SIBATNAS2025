version: "3" 
services:
  db-app:
    container_name: ${COMPOSE_PROJECT_NAME}-postgis-app
    image: postgis/postgis:14-3.3
    restart: always
    ports:
      - ${DB_APP_CONNECTION_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${DB_APP_CONNECTION_PASSWORD}
    volumes:
      - ./postgis/data-app:/var/lib/postgresql/data
      - ./setup/db-app:/docker-entrypoint-initdb.d

  db-spasial:
    container_name: ${COMPOSE_PROJECT_NAME}-postgis-spasial
    image: postgis/postgis:14-3.3
    restart: always
    ports:
      - ${DB_SPASIAL_CONNECTION_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${DB_SPASIAL_CONNECTION_PASSWORD}
    volumes:
      - ./postgis/data-spasial:/var/lib/postgresql/data
      - ./setup/db-spasial:/docker-entrypoint-initdb.d
      
  httpd_proxy:
    container_name: ${COMPOSE_PROJECT_NAME}-httpd-proxy
    image: httpd:2.4.58
    restart: always
    ports:
      - ${WEBSERVER_CONNECTION_PORT}:80
    volumes:
      - ./config/web/:/usr/local/apache2/conf
      - ./web/geoportal-react/build:/usr/local/apache2/htdocs/main
          
  python-api:
    container_name: ${COMPOSE_PROJECT_NAME}-api
    image: emhayusa/sikambing-api:1.0
    restart: always
    ports: 
      - "${API_PYTHON_CONNECTION_PORT}:5000"
    links: 
      - db-app
      - db-spasial
    depends_on:
      - db-app
      - db-spasial
    volumes:
      - ./upload/data:/opt/code/data
      - ./upload/metadata:/opt/code/metadata
      - ./config/pycsw:/opt/code/pycsw
      - ./api/python/app:/opt/code/app          
    environment:
      - "CONNECTION_SERVER=db-app"
      - "CONNECTION_PORT=5432"
      - "CONNECTION_USER=postgres"
      - "CONNECTION_PASSWORD=${DB_APP_CONNECTION_PASSWORD}"
      - "CONNECTION_DB=geoportal_db"
  
  node-api:
    container_name: ${COMPOSE_PROJECT_NAME}-node-api
    build:
      context: .
      dockerfile: Dockerfile
    image: sikambing-node-app
    ports:
      - '${API_NODE_CONNECTION_PORT}:8080'
    links: 
      - db-app
      - db-spasial
    depends_on:
      - db-app
      - db-spasial
    volumes:
      - ./api/node:/home/node

  pycsw_docker:
    container_name: ${COMPOSE_PROJECT_NAME}-pycsw
    image: geopython/pycsw:2.6.0
    restart: always
    ports: 
      - ${PYCSW_CONNECTION_PORT}:8000
    links: 
      - db-app
      - db-spasial
    depends_on:
      - db-app
      - db-spasial
    volumes:
      - ./config/pycsw:/etc/pycsw

  redis:
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    image: redis
    restart: always
    ports:
      - ${REDIS_CONNECTION_PORT}:6379

  geoserver:
    container_name: ${COMPOSE_PROJECT_NAME}-geoserver
    image: kartoza/geoserver:2.23.2
    restart: always
    depends_on:
      - db-spasial
    links:
      - db-spasial
    ports:
      - "${GEOSERVER_CONNECTION_PORT}:8080"
    volumes:
      - ./geoserver:/opt/geoserver
    environment:
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
      - GEOWEBCACHE_CACHE_DIR=/opt/geoserver/data_dir/gwc
      - GEOSERVER_LOG_DIR=/opt/geoserver/data_dir/logs
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      #- RECREATE_DATADIR=TRUE
      - INITIAL_MEMORY=4G
      - MAXIMUM_MEMORY=8G
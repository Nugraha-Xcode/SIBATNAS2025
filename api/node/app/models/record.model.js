module.exports = (sequelize, DataTypes) => {
  const tabel = sequelize.define(
    "record",
    {
      identifier: {
        type: DataTypes.TEXT,
        primaryKey: true,
        allowNull: false,
      },
      typename: {
        type: DataTypes.TEXT,
        allowNull: false,
      },
      schema: {
        type: DataTypes.TEXT,
        allowNull: false,
      },
      mdsource: {
        type: DataTypes.TEXT,
        allowNull: false,
      },
      insert_date: {
        type: DataTypes.TEXT,
        allowNull: false,
      },
      xml: {
        type: DataTypes.TEXT,
        allowNull: false,
      },
      anytext: {
        type: DataTypes.TEXT,
        allowNull: false,
      },
      language: DataTypes.TEXT,
      type: DataTypes.TEXT,
      title: DataTypes.TEXT,
      title_alternate: DataTypes.TEXT,
      abstract: DataTypes.TEXT,
      keywords: DataTypes.TEXT,
      keywordstype: DataTypes.TEXT,
      parentidentifier: DataTypes.TEXT,
      relation: DataTypes.TEXT,
      time_begin: DataTypes.TEXT,
      time_end: DataTypes.TEXT,
      topicategory: DataTypes.TEXT,
      resourcelanguage: DataTypes.TEXT,
      creator: DataTypes.TEXT,
      publisher: DataTypes.TEXT,
      contributor: DataTypes.TEXT,
      organization: DataTypes.TEXT,
      securityconstraints: DataTypes.TEXT,
      accessconstraints: DataTypes.TEXT,
      otherconstraints: DataTypes.TEXT,
      date: DataTypes.TEXT,
      date_revision: DataTypes.TEXT,
      date_creation: DataTypes.TEXT,
      date_publication: DataTypes.TEXT,
      date_modified: DataTypes.TEXT,
      format: DataTypes.TEXT,
      source: DataTypes.TEXT,
      crs: DataTypes.TEXT,
      geodescode: DataTypes.TEXT,
      denominator: DataTypes.TEXT,
      distancevalue: DataTypes.TEXT,
      distanceuom: DataTypes.TEXT,
      wkt_geometry: DataTypes.TEXT,
      servicetype: DataTypes.TEXT,
      servicetypeversion: DataTypes.TEXT,
      operation: DataTypes.TEXT,
      couplingtype: DataTypes.TEXT,
      operateson: DataTypes.TEXT,
      operatesonidentifier: DataTypes.TEXT,
      operatesoname: DataTypes.TEXT,
      degree: DataTypes.TEXT,
      classification: DataTypes.TEXT,
      conditionapplyingtoaccessanduse: DataTypes.TEXT,
      lineage: DataTypes.TEXT,
      responsiblepartyrole: DataTypes.TEXT,
      specificationtitle: DataTypes.TEXT,
      specificationdate: DataTypes.TEXT,
      specificationdatetype: DataTypes.TEXT,
      links: DataTypes.TEXT,
      anytext_tsvector: DataTypes.TSVECTOR,
      wkb_geometry: DataTypes.GEOMETRY("geometry", 4326),
    },
    {
      //tableName: "records",
      timestamps: false,
    }
  );

  return tabel;
};
